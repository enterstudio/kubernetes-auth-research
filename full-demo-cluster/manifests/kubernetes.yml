apiVersion: v1
kind: Pod
metadata:
  name: kube-controller
spec:
  hostNetwork: true
  volumes:
    - name: "etc-kubernetes"
      hostPath:
        path: "/etc/kubernetes"
    - name: "etc-tls"
      hostPath:
        path: "/etc/tls"
    - name: "ssl-certs"
      hostPath:
        path: "/usr/share/ca-certificates"
    - name: "var-run-kubernetes"
      hostPath:
        path: "/var/run/kubernetes"
    - name: "etcd-datadir"
      hostPath:
        path: "/var/lib/etcd"
    - name: "usr"
      hostPath:
        path: "/usr"
    - name: "lib64"
      hostPath:
        path: "/lib64"
  containers:
    - name: "etcd"
      image: "quay.io/coreos/etcd:v3.1.3"
      command:
        - "etcd"
      args:
        - "--data-dir=/var/lib/etcd"
        - "--advertise-client-urls=http://127.0.0.1:2379"
        - "--listen-client-urls=http://127.0.0.1:2379"
        - "--listen-peer-urls=http://127.0.0.1:2380"
        - "--name=etcd"
      volumeMounts:
        - mountPath: /var/lib/etcd
          name: "etcd-datadir"
    - name: "webhook-server"
      image: "quay.io/ktbartholomew/kube-webhook-server:latest"
      env:
      - name: NODE_PORT
        value: "5080"
    - name: "kube-apiserver"
      image: "gcr.io/google_containers/hyperkube-amd64:v1.5.4"
      command:
        - "/hyperkube"
      args:
        - "apiserver"
        - "--allow-privileged=true"
        - "--etcd-servers=http://127.0.0.1:2379"
        - "--insecure-bind-address=127.0.0.1"
        - "--service-cluster-ip-range=10.32.0.0/16"
        - "--tls-ca-file=/etc/tls/ca.pem"
        - "--tls-cert-file=/etc/tls/kubernetes.pem"
        - "--tls-private-key-file=/etc/tls/kubernetes.key"
        - "--client-ca-file=/etc/tls/ca.pem"
        - "--authentication-token-webhook-config-file=/etc/kubernetes/authn-webhook.conf.yml"
        - "--authorization-mode=Webhook,RBAC"
        - "--authorization-webhook-config-file=/etc/kubernetes/authz-webhook.conf.yml"
        - "--v=2"
      volumeMounts:
        - mountPath: /etc/kubernetes
          name: "etc-kubernetes"
        - mountPath: /var/run/kubernetes
          name: "var-run-kubernetes"
        - mountPath: /etc/tls
          name: "etc-tls"
    - name: "kube-controller-manager"
      image: "gcr.io/google_containers/hyperkube-amd64:v1.5.4"
      command:
        - "/hyperkube"
      args:
        - "controller-manager"
        - "--kubeconfig=/etc/kubernetes/kubeconfig"
        - "--service-account-private-key-file=/etc/tls/kubernetes.key"
        - "--v=2"
      volumeMounts:
        - mountPath: /etc/kubernetes
          name: "etc-kubernetes"
        - mountPath: /etc/tls
          name: "etc-tls"
    - name: "kube-scheduler"
      image: "gcr.io/google_containers/hyperkube-amd64:v1.5.4"
      command:
        - "/hyperkube"
      args:
        - "scheduler"
        - "--kubeconfig=/etc/kubernetes/kubeconfig"
        - "--v=2"
      volumeMounts:
        - mountPath: /etc/kubernetes
          name: "etc-kubernetes"
        - mountPath: /etc/tls
          name: "etc-tls"
    - name: "kube-proxy"
      image: "gcr.io/google_containers/hyperkube-amd64:v1.5.4"
      command:
        - "/hyperkube"
      args:
        - "proxy"
        - "--kubeconfig=/etc/kubernetes/kubeconfig"
        - "--v=2"
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /etc/kubernetes
          name: "etc-kubernetes"
        - mountPath: /etc/tls
          name: "etc-tls"
        - mountPath: /etc/ssl/certs
          name: "ssl-certs"
